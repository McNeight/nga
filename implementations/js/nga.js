/* Nga ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   Copyright (c) 2008 - 2016, Charles Childers
   Copyright (c) 2009 - 2010, Luke Parrish
   Copyright (c) 2010,        Marc Simpson
   Copyright (c) 2010,        Jay Skeer
   Copyright (c) 2011,        Kenneth Keating
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
var   IMAGE_SIZE    = 524288;         /* Amount of simulated RAM    */
var   DATA_DEPTH    =     32;         /* Depth of data stack        */
var   ADDRESS_DEPTH =    128;         /* Depth of the stacks        */
function Stack(size)
{
  this.sp    = 0;
  this.data  = new Array(size);
  this.push  = function(n) { this.sp++; this.data[this.sp] = n; }
  this.pop   = function()  { return this.data[this.sp--]; }
  this.depth = function()  { return this.sp; }
  this.tos   = function()  { return this.data[this.sp]; }
  this.nos   = function()  { return this.data[this.sp - 1]; }
  this.dup   = function()  { this.push(this.tos()); }
  this.drop  = function()  { this.sp--; }
  this.swap  = function()  { var a = this.nos();
                             this.data[this.sp - 1] = this.tos();
                             this.data[this.sp] = a;
                           }
  this.inc   = function()  { this.data[this.sp]++; }
  this.dec   = function()  { this.data[this.sp]--; }
  this.reset = function()  { this.sp = 0; }
}
function Opcodes()
{
  this.NOP = 0;       this.LIT = 1;
  this.DUP = 2;       this.DROP = 3;
  this.SWAP = 4;      this.PUSH = 5;
  this.POP = 6;       this.JUMP = 7;
  this.CALL = 8;      this.CCALL = 9;
  this.RETURN = 10;   this.EQ = 11;
  this.NEQ = 12;      this.LT = 13;
  this.GT = 14;       this.FETCH = 15;
  this.STORE = 16;    this.ADD = 17;
  this.SUB = 18;      this.MUL = 19;
  this.DIVMOD = 20;   this.AND = 21;
  this.OR = 22;       this.XOR = 23;
  this.SHIFT = 24;    this.ZERO_EXIT = 25;
  this.END = 26;
}
var ip = 0;
var data    = new Stack(DATA_DEPTH);
var address = new Stack(ADDRESS_DEPTH);
var image   = new Array(IMAGE_SIZE);
var vm = new Opcodes();
var instructions = new Array(vm.END);
function rxPrepareVM()
{
  ip = 0;
  data.reset();
  address.reset();
  image = [ 1793,-1,4355,4372,201611,0,10,1,10,2,10,3,10,4,10,5,10,6,10,7,10,8,10,9,10,10,10,11,10,12,10,13,10,14,10,15,10,16,10,17,10,18,10,19,10,20,10,21,10,22,10,23,10,24,10,25,10,26,10,2049,10,67502597,10,2049,61,2049,61,10,68223234,1,2575,85000450,1,656912,2049,68,25,459011,74,524546,74,302256641,1,10,168756239,17043713,1,1,2577,134284549,63,2049,84,85263883,2049,85,302056966,1,25,1793,89,33620739,0,10,2049,63,2049,79,524548,79,590092,101,25,524546,79,134284289,-1,89,100860677,10,421,403,268505089,121,120,135205121,121,10,9,10,101384453,0,9,10,134287105,3,71,659457,3,524559,134,10,2049,68,25,2049,134,1793,142,2049,142,134283523,0,134,10,0,659201,155,524545,25,139,168820993,0,155,2049,156,25,134283523,7,139,2049,134,10,8,10,524545,59,139,2049,134,10,2049,156,134283521,175,173,122,10,2049,156,134283521,139,173,122,10,8,10,659713,0,659713,1,659713,2,659713,3,17108737,3,2,524559,134,2049,134,2049,134,2049,149,168820998,2,719,1471,167841793,218,5,17826049,0,218,2,15,25,524546,203,134287105,219,104,2305,220,459023,228,134287361,219,223,659201,218,1,1000,659969,48,318836481,244,10,10,2049,68,25,2049,245,2049,247,17826065,244,251,7,17826049,1,243,0,251793409,244,1641217,45,268501251,-1,243,659713,1,2049,262,2049,251,17760515,244,243,660239,0,112,114,101,102,105,120,58,59,0,285278479,284,7,2576,2049,293,524545,284,238,17826050,283,0,2572,2049,275,2049,164,10,524559,164,10,17760513,181,3,205,8,251727617,3,2,2049,199,268501264,-1,155,10,2049,238,2049,199,524559,164,10,285282049,3,3,16846593,155,-1,155,134283536,7,139,16846593,3,0,134,8,524545,19,139,659201,3,524545,25,139,17043201,3,7,2049,139,2049,134,268505092,155,2049,156,25,656131,659201,3,524545,7,139,2049,134,524545,19,139,10,2049,156,25,134283523,55,139,10,2049,156,25,134283523,15,139,10,2049,156,25,134283523,17,139,10,1793,5,10,524546,199,134284303,201,2063,10,1471,1642241,283,285282049,412,1,524548,406,10,134287105,218,406,10,134287105,412,238,16845825,0,421,403,2049,122,10,17826050,412,297,8,134283521,413,425,122,10,0,9,188,100,117,112,0,444,11,188,100,114,111,112,0,451,13,188,115,119,97,112,0,459,21,188,99,97,108,108,0,467,27,188,101,113,63,0,475,29,188,45,101,113,63,0,482,31,188,108,116,63,0,490,33,188,103,116,63,0,497,35,188,102,101,116,99,104,0,504,37,188,115,116,111,114,101,0,513,39,188,43,0,522,41,188,45,0,527,43,188,42,0,532,45,188,47,109,111,100,0,537,47,188,97,110,100,0,545,49,188,111,114,0,552,51,188,120,111,114,0,558,53,188,115,104,105,102,116,0,565,389,195,112,117,115,104,0,574,396,195,112,111,112,0,582,382,195,48,59,0,589,68,181,102,101,116,99,104,45,110,101,120,116,0,595,71,181,115,116,111,114,101,45,110,101,120,116,0,609,275,181,115,116,114,58,116,111,45,110,117,109,98,101,114,0,623,104,181,115,116,114,58,101,113,63,0,640,79,181,115,116,114,58,108,101,110,103,116,104,0,651,122,181,99,104,111,111,115,101,0,665,128,181,105,102,0,675,130,181,45,105,102,0,681,155,164,67,111,109,112,105,108,101,114,0,688,3,164,72,101,97,112,0,700,134,181,44,0,708,149,181,115,44,0,713,158,195,59,0,719,335,195,91,0,724,355,195,93,0,729,2,164,68,105,99,116,105,111,110,97,114,121,0,734,197,181,100,58,108,105,110,107,0,748,199,181,100,58,120,116,0,758,201,181,100,58,99,108,97,115,115,0,766,203,181,100,58,110,97,109,101,0,777,181,181,99,108,97,115,115,58,119,111,114,100,0,787,195,181,99,108,97,115,115,58,109,97,99,114,111,0,801,164,181,99,108,97,115,115,58,100,97,116,97,0,816,205,181,100,58,97,100,100,45,104,101,97,100,101,114,0,830,306,195,112,114,101,102,105,120,58,35,0,846,314,195,112,114,101,102,105,120,58,58,0,858,328,195,112,114,101,102,105,120,58,38,0,870,311,195,112,114,101,102,105,120,58,36,0,882,371,195,114,101,112,101,97,116,0,894,373,195,97,103,97,105,110,0,904,435,181,105,110,116,101,114,112,114,101,116,0,913,238,181,100,58,108,111,111,107,117,112,0,926,188,181,99,108,97,115,115,58,112,114,105,109,105,116,105,118,101,0,938,4,164,86,101,114,115,105,111,110,0,957,403,181,101,114,114,58,110,111,116,102,111,117,110,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,0,116,99,0,80,65,67,69,0,103,0,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,968,1543,181,69,79,77,0,1,524287,10,1536,1557,181,83,84,82,73,78,71,83,0,2049,1543,1,12,1,128,19,18,10,1546,1578,195,112,114,101,102,105,120,58,40,0,3,10,1566,1591,181,114,101,99,108,97,115,115,0,1,2,15,2049,201,16,10,1580,1611,181,105,109,109,101,100,105,97,116,101,0,1,195,2049,1591,10,1598,1624,181,100,97,116,97,0,1,164,2049,1591,10,1616,1644,181,99,111,109,112,105,108,101,58,108,105,116,0,1,1,2049,134,2049,134,10,1629,1667,181,99,111,109,112,105,108,101,58,106,117,109,112,0,2049,1644,1,7,2049,134,10,1651,1690,181,99,111,109,112,105,108,101,58,99,97,108,108,0,2049,1644,1,8,2049,134,10,1674,1712,181,99,111,109,112,105,108,101,58,114,101,116,0,1,10,2049,134,10,1697,1729,195,112,114,101,102,105,120,58,96,0,1,155,15,1,1740,7,2049,275,2049,134,10,1,1735,1,1747,7,3,10,1,1745,2049,122,10,1717,1766,181,100,58,97,100,100,45,110,97,109,101,0,1,164,1,0,2049,205,1,3,15,1,2,15,2049,199,16,10,1752,1789,181,118,97,114,0,2049,1766,1,0,2049,134,10,1782,1806,181,118,97,114,60,110,62,0,2049,1766,2049,134,10,1796,1820,181,99,111,110,115,116,0,2049,1766,1,2,15,2049,199,16,10,1811,1837,181,84,82,85,69,0,1,-1,10,1829,1849,181,70,65,76,83,69,0,1,0,10,1840,1863,181,110,58,122,101,114,111,63,0,1,0,11,10,1852,1879,181,110,58,45,122,101,114,111,63,0,1,0,12,10,1867,1898,181,110,58,110,101,103,97,116,105,118,101,63,0,1,0,13,10,1883,1917,181,110,58,112,111,115,105,116,105,118,101,63,0,1,0,14,10,1902,1928,181,100,105,112,0,4,5,8,6,10,1921,1940,181,115,105,112,0,5,2,6,4,1,21,2049,1928,10,1933,1955,181,98,105,0,1,1940,2049,1928,8,10,1949,1968,181,98,105,42,0,1,1928,2049,1928,8,10,1961,1981,181,98,105,64,0,2,2049,1968,10,1974,1992,181,116,114,105,0,1,2002,7,1,1940,2049,1928,2049,1940,10,1,1995,2049,1928,8,10,1985,2016,181,116,114,105,42,0,1,2035,7,1,2028,7,4,1,1928,2049,1928,10,1,2022,2049,1928,2049,1928,10,1,2019,2049,1928,8,10,2008,2049,181,116,114,105,64,0,2,2,2049,2016,10,2041,2063,181,119,104,105,108,101,0,1,2076,7,2,2049,1928,4,25,3,1,2066,7,10,1,2066,8,3,10,2054,2090,181,117,110,116,105,108,0,1,2106,7,2,2049,1928,4,1,-1,23,25,3,1,2093,7,10,1,2093,8,3,10,2081,2120,181,116,105,109,101,115,0,4,1,2138,7,25,1,1,18,5,1,21,2049,1940,6,1,2124,7,10,1,2124,8,3,10,2111,2157,181,99,111,109,112,105,108,105,110,103,63,0,1,155,15,10,2143,2170,181,100,101,112,116,104,0,1,-1,15,10,2161,2183,181,114,101,115,101,116,0,2049,2170,1,2190,7,3,10,1,2188,2049,2120,10,2174,2203,181,116,117,99,107,0,2,5,4,6,10,2195,2216,181,111,118,101,114,0,5,2,6,4,10,2208,2233,181,100,117,112,45,112,97,105,114,0,2049,2216,2049,2216,10,2221,2245,181,110,105,112,0,4,3,10,2238,2261,181,100,114,111,112,45,112,97,105,114,0,3,3,10,2248,2272,181,63,100,117,112,0,2,25,10,2264,2282,181,114,111,116,0,1,2287,7,4,10,1,2285,2049,1928,4,10,2275,2301,181,116,111,114,115,0,6,6,2,5,4,5,10,2293,2313,181,47,0,20,4,3,10,2308,2324,181,109,111,100,0,20,3,10,2317,2333,181,42,47,0,5,19,6,2049,2313,10,2327,2346,181,110,111,116,0,1,-1,23,10,2339,2359,181,110,58,112,111,119,0,1,1,4,1,2369,7,2049,2216,19,10,1,2365,2049,2120,2049,2245,10,2350,2388,181,110,58,110,101,103,97,116,101,0,1,-1,19,10,2376,2404,181,110,58,115,113,117,97,114,101,0,2,19,10,2392,2417,181,110,58,115,113,114,116,0,1,1,1,2439,7,2049,2233,2049,2313,2049,2216,18,1,2,2049,2313,25,17,1,2422,7,10,1,2422,8,2049,2245,10,2407,2454,181,110,58,109,105,110,0,2049,2233,13,1,2462,7,3,10,1,2460,1,2470,7,2049,2245,10,1,2467,2049,122,10,2445,2484,181,110,58,109,97,120,0,2049,2233,14,1,2492,7,3,10,1,2490,1,2500,7,2049,2245,10,1,2497,2049,122,10,2475,2514,181,110,58,97,98,115,0,2,2049,2388,2049,2484,10,2505,2531,181,110,58,108,105,109,105,116,0,4,5,2049,2454,6,2049,2484,10,2520,2548,181,110,58,105,110,99,0,1,1,17,10,2539,2561,181,110,58,100,101,99,0,1,1,18,10,2552,2579,181,110,58,98,101,116,119,101,101,110,63,0,2049,2282,1,2591,7,2049,2282,2049,2282,2049,2531,10,1,2584,2049,1940,11,10,2565,2609,181,118,58,105,110,99,45,98,121,0,1,2615,7,15,17,10,1,2612,2049,1940,16,10,2597,2633,181,118,58,100,101,99,45,98,121,0,1,2640,7,15,4,18,10,1,2636,2049,1940,16,10,2621,2655,181,118,58,105,110,99,0,1,1,4,2049,2609,10,2646,2670,181,118,58,100,101,99,0,1,1,4,2049,2633,10,2661,2687,181,118,58,108,105,109,105,116,0,5,5,2,15,6,6,2049,2531,4,16,10,2676,2707,181,97,108,108,111,116,0,1,3,2049,2609,10,2698,2725,181,83,99,111,112,101,76,105,115,116,0,4199,4246,10,2712,2734,181,123,123,0,1,2,15,2,1,2725,2049,71,16,10,2728,2760,181,45,45,45,114,101,118,101,97,108,45,45,45,0,1,2,15,1,2725,2049,2548,16,10,2744,2775,181,125,125,0,1,2725,2049,68,4,15,11,1,2792,7,1,2725,15,1,2,16,10,1,2785,1,2825,7,1,2725,15,1,2820,7,1,2,15,2,15,1,2725,2049,2548,15,12,25,3,1,2805,7,10,1,2803,8,16,10,1,2797,2049,122,10,2769,2840,164,66,117,102,102,101,114,0,0,10,2830,2849,164,80,116,114,0,0,10,2842,2864,181,116,101,114,109,105,110,97,116,101,0,1,0,1,2849,15,16,10,2769,2887,181,98,117,102,102,101,114,58,115,116,97,114,116,0,1,2840,15,10,2871,2905,181,98,117,102,102,101,114,58,101,110,100,0,1,2849,15,10,2891,2923,181,98,117,102,102,101,114,58,97,100,100,0,2049,2905,16,1,2849,2049,2655,2049,2864,10,2909,2947,181,98,117,102,102,101,114,58,103,101,116,0,1,2849,2049,2670,2049,2905,15,2049,2864,10,2933,2973,181,98,117,102,102,101,114,58,101,109,112,116,121,0,2049,2887,1,2849,16,2049,2864,10,2957,2996,181,98,117,102,102,101,114,58,115,105,122,101,0,2049,2905,2049,2887,18,10,2981,3016,181,98,117,102,102,101,114,58,115,101,116,0,1,2840,16,2049,2973,10,3002,3031,181,108,97,116,101,114,0,6,6,4,5,5,10,3022,3045,181,99,111,112,121,0,1,3055,7,1,68,2049,1928,2049,71,10,1,3048,2049,2120,3,3,10,3037,3076,181,77,65,88,45,76,69,78,71,84,72,0,1,128,10,3062,3094,164,115,116,114,58,67,117,114,114,101,110,116,0,0,10,3079,3111,181,115,116,114,58,112,111,105,110,116,101,114,0,1,3094,15,2049,3076,19,2049,1557,17,10,3096,3133,181,115,116,114,58,110,101,120,116,0,1,3094,2049,2655,1,3094,15,1,12,11,1,3152,7,1,0,1,3094,16,10,1,3146,2049,128,10,3037,3169,181,115,116,114,58,116,101,109,112,0,2,2049,79,2049,2548,2049,3111,4,2049,3045,2049,3111,2049,3133,10,3157,3197,181,115,116,114,58,101,109,112,116,121,0,2049,3111,2049,3133,10,3184,3214,181,115,116,114,58,115,107,105,112,0,6,1,3224,7,2049,68,1,0,12,10,1,3218,2049,2063,2049,2561,5,10,3202,3244,181,115,116,114,58,107,101,101,112,0,2049,2157,1,3254,7,1,3214,2049,181,10,1,3249,2049,128,1,3,15,1,3267,7,2049,149,10,1,3264,2049,1928,2049,164,10,3232,3286,195,112,114,101,102,105,120,58,39,0,2049,2157,1,3294,7,2049,3244,10,1,3291,1,3302,7,2049,3169,10,1,3299,2049,122,10,3274,3319,181,115,116,114,58,99,104,111,112,0,2049,3169,2,2049,79,2049,2216,17,2049,2561,1,0,4,16,10,3307,3349,181,115,116,114,58,114,101,118,101,114,115,101,0,2,2049,3169,2049,3016,1,79,1,3366,7,2,2049,79,17,2049,2561,10,1,3359,2049,1955,4,1,3381,7,2,15,2049,2923,2049,2561,10,1,3374,2049,2120,3,2049,2887,2049,3169,10,3334,3408,181,115,116,114,58,116,114,105,109,45,108,101,102,116,0,2049,3169,1,3437,7,2049,68,1,3422,7,1,32,11,10,1,3418,1,3431,7,1,0,12,10,1,3427,2049,1955,21,10,1,3413,2049,2063,2049,2561,10,3391,3462,181,115,116,114,58,116,114,105,109,45,114,105,103,104,116,0,2049,3169,2049,3349,2049,3408,2049,3349,10,3444,3483,181,115,116,114,58,116,114,105,109,0,2049,3462,2049,3408,10,3471,3503,181,115,116,114,58,112,114,101,112,101,110,100,0,2049,3169,1,3529,7,2,2049,79,17,1,3521,7,2,2049,79,2049,2548,10,1,3515,2049,1928,4,2049,3045,10,1,3508,2049,1940,10,3488,3548,181,115,116,114,58,97,112,112,101,110,100,0,4,2049,3503,10,3534,3562,164,78,101,101,100,108,101,0,0,10,3534,3581,181,115,116,114,58,104,97,115,45,99,104,97,114,63,0,1,3562,16,2049,68,2,1,0,11,1,3600,7,3,3,1,0,1,0,10,1,3593,1,3608,7,1,-1,10,1,3605,2049,122,25,3,1,3562,15,11,1,3626,7,1,-1,1,0,10,1,3621,1,3634,7,1,-1,10,1,3631,2049,122,25,3,1,3584,7,10,3564,3658,181,60,115,116,114,58,104,97,115,104,62,0,5,1,33,19,6,2049,68,25,4,5,17,6,1,3658,7,10,3564,3686,181,115,116,114,58,104,97,115,104,0,1,5381,4,2049,3658,3,10,3674,3706,181,99,104,114,58,83,80,65,67,69,0,1,32,10,3693,3720,181,99,104,114,58,69,83,67,0,1,27,10,3709,3734,181,99,104,114,58,84,65,66,0,1,9,10,3723,3747,181,99,104,114,58,67,82,0,1,13,10,3737,3760,181,99,104,114,58,76,70,0,1,10,10,3750,3778,181,99,104,114,58,108,101,116,116,101,114,63,0,1,65,1,122,2049,2579,10,3763,3803,181,99,104,114,58,108,111,119,101,114,99,97,115,101,63,0,1,97,1,122,2049,2579,10,3785,3828,181,99,104,114,58,117,112,112,101,114,99,97,115,101,63,0,1,65,1,90,2049,2579,10,3810,3849,181,99,104,114,58,100,105,103,105,116,63,0,1,48,1,57,2049,2579,10,3835,3875,181,99,104,114,58,119,104,105,116,101,115,112,97,99,101,63,0,1,3882,7,2049,3706,11,10,1,3878,1,3891,7,1,9,11,10,1,3887,1,3918,7,1,3903,7,1,10,11,10,1,3899,1,3912,7,1,13,11,10,1,3908,2049,1955,22,10,1,3896,2049,1992,22,22,10,3856,3941,181,99,104,114,58,116,111,45,117,112,112,101,114,0,2049,3706,18,10,3925,3961,181,99,104,114,58,116,111,45,108,111,119,101,114,0,2049,3706,17,10,3945,3984,181,99,104,114,58,116,111,103,103,108,101,45,99,97,115,101,0,2,2049,3803,1,3993,7,2049,3941,10,1,3990,1,4001,7,2049,3961,10,1,3998,2049,122,10,3965,4023,181,99,104,114,58,116,111,45,115,116,114,105,110,103,0,2049,3214,46,0,1,4025,2049,3169,1,4036,7,16,10,1,4034,2049,1940,10,4006,4057,181,99,104,114,58,118,105,115,105,98,108,101,63,0,1,31,1,126,2049,2579,10,4041,4073,181,86,97,108,117,101,0,0,10,4041,4090,181,110,58,116,111,45,115,116,114,105,110,103,0,1,3,15,2049,3016,2,1,4073,16,2049,2514,1,4117,7,1,10,20,4,1,48,17,2049,2923,2,2049,1879,10,1,4104,2049,2063,3,1,4073,15,2049,1898,1,4135,7,1,45,2049,2923,10,1,4130,2049,128,2049,2887,2049,3349,2049,3169,10,4075,4154,181,99,111,110,115,0,1,3,15,1,4166,7,4,2049,134,2049,134,10,1,4160,2049,1928,10,4146,4180,181,99,117,114,114,121,0,1,3,15,1,4194,7,4,2049,1644,2049,1690,2049,1712,10,1,4186,2049,1928,10,4171,4207,181,99,97,115,101,0,1,4214,7,2049,2216,11,10,1,4210,2049,1928,4,1,4228,7,2049,2245,8,1,-1,10,1,4222,1,4237,7,3,1,0,10,1,4233,2049,122,25,6,3,3,10,4199,4261,181,83,121,115,116,101,109,83,116,97,116,101,0,0,0,0,10,4199,4273,181,109,97,114,107,0,1,3,15,1,4261,1,0,17,16,1,2,15,1,4261,1,1,17,16,10,4265,4301,181,115,119,101,101,112,0,1,4261,1,0,17,15,1,3,16,1,4261,1,1,17,15,1,2,16,10,4292,4328,181,112,117,116,99,0,1000,10,4320,4338,181,112,117,116,115,0,1,4350,7,2049,68,25,2049,4328,1,4341,7,10,1,4341,8,3,10,4330,4363,181,112,117,116,110,0,2049,4090,2049,4338,2049,3706,2049,4328,10,0 ];

}
instructions[vm.NOP] = function() { }
instructions[vm.LIT] = function()
{
  ip++;
  data.push(image[ip]);
}
instructions[vm.DUP] = function()
{
  data.dup();
}
instructions[vm.DROP] = function()
{
  data.drop();
}
instructions[vm.SWAP] = function()
{
  data.swap();
}
instructions[vm.PUSH] = function()
{
  address.push(data.pop());
}
instructions[vm.POP] = function()
{
  data.push(address.pop())
}
instructions[vm.JUMP] = function()
{
  ip = data.pop() - 1;
}
instructions[vm.CALL] = function()
{
  address.push(ip);
  ip = data.pop() - 1;
}
instructions[vm.CCALL] = function()
{
  var a, b;
  a = data.pop();
  b = data.pop();
  if (b != 0) {
    address.push(ip);
    ip = a - 1;
  }
}
instructions[vm.RETURN] = function()
{
  ip = address.pop();
}
instructions[vm.EQ] = function()
{
  var a, b;
  a = data.pop();
  b = data.pop();
  if (b == a)
    data.push(-1);
  else
    data.push(0);
}
instructions[vm.NEQ] = function()
{
  var a, b;
  a = data.pop();
  b = data.pop();
  if (b != a)
    data.push(-1);
  else
    data.push(0);
}
instructions[vm.LT] = function()
{
  var a, b;
  a = data.pop();
  b = data.pop();
  if (b < a)
    data.push(-1);
  else
    data.push(0);
}
instructions[vm.GT] = function()
{
  var a, b;
  a = data.pop();
  b = data.pop();
  if (b > a)
    data.push(-1);
  else
    data.push(0);
}
instructions[vm.FETCH] = function()
{
  x = data.pop();
  data.push(image[x]);
}
instructions[vm.STORE] = function()
{
  image[data.tos()] = data.nos();
  data.drop();
  data.drop();
}
instructions[vm.ADD] = function()
{
  var x = data.pop();
  var y = data.pop();
  data.push(x + y);
}
instructions[vm.SUB] = function()
{
  var x = data.pop();
  var y = data.pop();
  data.push(y - x);
}
instructions[vm.MUL] = function()
{
  var x = data.pop();
  var y = data.pop();
  data.push(y * x);
}
instructions[vm.DIVMOD] = function()
{
  var b = data.pop();
  var a = data.pop();
  if (b == 0)
  {
    ip = 0;
    data.sp = 0;
    address.sp = 0;
  }
  else
  {
    var x = Math.abs(b);
    var y = Math.abs(a);
    var q = Math.floor(y / x);
    var r = y % x;
    if (a < 0 && b < 0)
      r = r * -1;
    if (a > 0 && b < 0)
      q = q * -1;
    if (a < 0 && b > 0)
    {
      r = r * -1;
      q = q * -1;
    }
    data.push(r);
    data.push(q);
  }
}
instructions[vm.AND] = function()
{
  var x = data.pop();
  var y = data.pop();
  data.push(x & y);
}
instructions[vm.OR] = function()
{
  var x = data.pop();
  var y = data.pop();
  data.push(x | y);
}
instructions[vm.XOR] = function()
{
  var x = data.pop();
  var y = data.pop();
  data.push(x ^ y);
}
instructions[vm.SHIFT] = function()
{
  var x = data.pop();
  var y = data.pop();
  if (x < 0)
    data.push(y << (x * -1));
  else
    data.push(y >>= x);
}
instructions[vm.ZERO_EXIT] = function()
{
  if (data.tos() == 0)
  {
    data.drop();
    ip = address.pop();
  }
}
instructions[vm.END] = function()
{
  ip = IMAGE_SIZE;
}
window.addEventListener('load', function(e) {
  rxPrepareVM();
}, false);
function processOpcode(opcode)
{
  instructions[opcode]();
  checkStack();
}
function validatePackedOpcodes(opcode) {
  var raw = opcode;
  var current;
  var valid = -1;
  var i = 0;
  while (i < 4) {
    current = raw & 0xFF;
    if (!current >= 0 && current <= 26)
      valid = 0;
    raw = raw >> 8;
    i++;
  }
}
function ngaProcessPackedOpcodes(opcode) {
  var raw = opcode;
  ops = new Array(3);
  ops[0]= raw & (255);
  raw = raw >> 8;
  ops[1]= raw & (255);
  raw = raw >> 8;
  ops[2]= raw & (255);
  raw = raw >> 8;
  ops[3]= raw & (255);
  processOpcode(ops[0]);
  processOpcode(ops[1]);
  processOpcode(ops[2]);
  processOpcode(ops[3]);
}
function ngaRun(offset) {
  var opcode;
  address.sp = 1;
  ip = offset;
  var notfound = d_xt_for("err:notfound");
  while (ip < IMAGE_SIZE) {
    opcode = image[ip];
    if (ip == notfound) {
      document.getElementById('console').innerHTML += "<p>err:notfound : " + string_extract(1471) + "<br>";
      console.log("err:notfound");
      console.log(" - __" + string_extract(1471) + "__");
    }
    if (validatePackedOpcodes(opcode) != 0) {
      if (opcode == 1000) {
        var s = String.fromCharCode(data.pop());
        document.getElementById('console').innerHTML += s;
      } else {
        ngaProcessPackedOpcodes(opcode);
      }
    } else {
      console.log("Invalid instruction!");
      console.log("At " + ip + ", opcode " + opcode);
    }
    if (address.sp == 0)
      ip = IMAGE_SIZE;
    ip++;
  }
}
function checkStack()
{
  var depth  = data.depth();
  var adepth = address.depth();
  var flag = 0;
  if (depth < 0 || adepth < 0)
  {
    flag = -1;
  }
  if (depth > DATA_DEPTH || adepth > DATA_DEPTH)
  {
    flag = -1;
  }
  if (flag == -1)
  {
    ip = 0;
    data.sp = 0;
    address.sp = 0;
  }
}
function string_inject(str, buffer) {
  var m = str.length;
  var i = 0;
  while (m > 0) {
    image[buffer + i] = str[i].charCodeAt(0);
    image[buffer + i + 1] = 0;
    m--; i++;
  }
}
function string_extract(at) {
  string_data = "";
  var starting = at;
  var i = 0;
  while (image[starting] != 0)
    string_data += String.fromCharCode(image[starting++]);
  return string_data;
}
function d_link(dt) {
  return dt + 0;
}
function d_xt(dt) {
  return dt + 1;
}
function d_class(dt) {
  return dt + 2;
}
function d_name(dt) {
  return dt + 3;
}
function d_count_entries() {
  var c = 0;
  var i = image[2];
  while (image[i] != 0) {
    c++;
    i = image[i];
  }
  return c;
}
function d_lookup(name) {
  var dt = 0;
  var i = image[2];
  var dname;
  while (image[i] != 0 && i != 0) {
    dname = string_extract(d_name(i));
    if (dname == name) {
      dt = i;
      i = 0;
    } else {
      i = image[i];
    }
  }
  return dt;
}
function d_xt_for(name) {
  return image[d_xt(d_lookup(name))];
}
function d_class_for(name) {
  return image[d_class(d_lookup(name))];
}
function evaluate(s) {
  if (s.length == 0)
    return;
  var i = d_xt_for("interpret");
  string_inject(s, 1471);
  data.push(1471);
  ngaRun(i);
}
function cls() {
  document.getElementById('console').innerHTML = "";
}
function unu(src) {
  raw = src.split("\n");
  var i = raw.length;
  var lines = new Array();
  var j = 0;
  var code = 0;
  while (j < i) {
    if (code == 1 && raw[j] == "````") {
      code = 0;
    } else if (code == 0 && raw[j] == "````") {
      code = 1;
    } else if (code == 1) {
      lines.push(raw[j]);
    }
    j++;
  }
  return lines.join(" ");
}
function go() {
  rxPrepareVM();
  src = document.getElementById("input").value;
  tokens = unu(src).match(/\S+/g);
  var i = tokens.length;
  var j = 0;
  while (j < i) {
    evaluate(tokens[j]);
    j++;
  }
  s = "";
  i = data.depth();
  j = 1;
  while (j <= i) {
    s = s + data.data[j] + " ";
    j++;
  }
  document.getElementById("console").innerHTML += "<br>Stack: " + s + "<hr>";
}

function save() {
  src = document.getElementById("input").value;
  console.log('saving ' + src);
  localStorage.setItem("Usercode", src);
}

function load() {
  src = localStorage.getItem("Usercode");
  document.getElementById("input").value = src;
}

